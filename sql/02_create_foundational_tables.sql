-- ============================================================================
-- Snowflake Agentic AI Platform - Foundational Tables
-- ============================================================================
-- Purpose: Create core metadata and tracking tables
-- Version: 1.0
-- ============================================================================

USE DATABASE AGENTIC_PLATFORM_DEV;

-- ============================================================================
-- METADATA SCHEMA TABLES
-- ============================================================================

USE SCHEMA METADATA;

-- Enterprise Data Dictionary
CREATE TABLE IF NOT EXISTS ENTERPRISE_DATA_DICTIONARY (
    DICT_ID STRING DEFAULT UUID_STRING() PRIMARY KEY,
    SOURCE_SYSTEM STRING NOT NULL,
    TABLE_NAME STRING NOT NULL,
    COLUMN_NAME STRING NOT NULL,
    DATA_TYPE STRING NOT NULL,
    DESCRIPTION STRING,
    BUSINESS_NAME STRING,
    IS_PII BOOLEAN DEFAULT FALSE,
    IS_PHI BOOLEAN DEFAULT FALSE,
    PII_TYPE STRING, -- SSN, EMAIL, PHONE, etc.
    DATA_CLASSIFICATION STRING, -- PUBLIC, INTERNAL, CONFIDENTIAL, RESTRICTED
    SAMPLE_VALUES ARRAY,
    VALIDATION_RULES ARRAY,
    CONSTRAINTS STRING,
    SYNONYMS ARRAY,
    CREATED_AT TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP(),
    UPDATED_AT TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP(),
    CREATED_BY STRING DEFAULT CURRENT_USER(),
    TAGS OBJECT,
    METADATA VARIANT
);

-- Apply tags to PII columns
ALTER TABLE ENTERPRISE_DATA_DICTIONARY MODIFY COLUMN COLUMN_NAME
    SET TAG SNOWFLAKE.CORE.SEMANTIC_CATEGORY = 'METADATA';

-- DDL Proposals tracking
CREATE TABLE IF NOT EXISTS DDL_PROPOSALS (
    PROPOSAL_ID STRING DEFAULT UUID_STRING() PRIMARY KEY,
    WORKFLOW_ID STRING NOT NULL,
    SOURCE_NAME STRING NOT NULL,
    PROPOSED_TABLE_NAME STRING NOT NULL,
    SOURCE_DDL STRING NOT NULL,
    LANDING_DDL STRING NOT NULL,
    SCHEMA_JSON VARIANT,
    AI_CONFIDENCE_SCORE FLOAT,
    APPROVAL_STATUS STRING DEFAULT 'PENDING', -- PENDING, APPROVED, REJECTED
    APPROVED_BY STRING,
    APPROVED_AT TIMESTAMP_NTZ,
    CREATED_AT TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP(),
    METADATA VARIANT
);

-- ============================================================================
-- WORKFLOWS SCHEMA TABLES
-- ============================================================================

USE SCHEMA WORKFLOWS;

-- Workflow Executions (main orchestration tracking)
CREATE TABLE IF NOT EXISTS WORKFLOW_EXECUTIONS (
    WORKFLOW_ID STRING DEFAULT UUID_STRING() PRIMARY KEY,
    WORKFLOW_TYPE STRING NOT NULL, -- ONBOARDING, PROFILING_ONLY, MAPPING_ONLY
    SOURCE_STAGE_PATH STRING NOT NULL,
    SOURCE_FILE_NAME STRING,
    TARGET_SCHEMA STRING,
    STATUS STRING DEFAULT 'INITIATED', -- INITIATED, IN_PROGRESS, COMPLETED, FAILED, CANCELLED
    START_TIME TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP(),
    END_TIME TIMESTAMP_NTZ,
    DURATION_SECONDS NUMBER(10,2),
    INITIATED_BY STRING DEFAULT CURRENT_USER(),
    ERROR_MESSAGE STRING,
    AGENT_SEQUENCE ARRAY, -- Track which agents were invoked
    METADATA VARIANT
);

-- Agent Execution Log (detailed agent-level tracking)
CREATE TABLE IF NOT EXISTS AGENT_EXECUTION_LOG (
    EXECUTION_ID STRING DEFAULT UUID_STRING() PRIMARY KEY,
    WORKFLOW_ID STRING NOT NULL,
    AGENT_NAME STRING NOT NULL, -- PROFILING, DICTIONARY, MAPPING
    AGENT_VERSION STRING DEFAULT 'v1.0',
    STATUS STRING DEFAULT 'RUNNING', -- RUNNING, COMPLETED, FAILED
    START_TIME TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP(),
    END_TIME TIMESTAMP_NTZ,
    DURATION_SECONDS NUMBER(10,2),
    INPUT_PARAMS VARIANT,
    OUTPUT_RESULT VARIANT,
    ERROR_MESSAGE STRING,
    ERROR_STACK STRING,
    TOKENS_USED NUMBER(10,0), -- Cortex AI tokens consumed
    CREDITS_USED NUMBER(10,4),
    METADATA VARIANT,
    FOREIGN KEY (WORKFLOW_ID) REFERENCES WORKFLOW_EXECUTIONS(WORKFLOW_ID)
);

-- ============================================================================
-- AGENT HISTORY TABLES (State Storage)
-- ============================================================================

USE SCHEMA AGENTS;

-- Data Profiling Agent History
CREATE TABLE IF NOT EXISTS AGENT_PROFILING_HISTORY (
    PROFILE_ID STRING DEFAULT UUID_STRING() PRIMARY KEY,
    WORKFLOW_ID STRING NOT NULL,
    EXECUTION_ID STRING NOT NULL,
    SOURCE_STAGE_PATH STRING NOT NULL,
    SOURCE_FILE_NAME STRING,
    SAMPLE_SIZE NUMBER(10,0),
    INFERRED_SCHEMA VARIANT, -- Result from INFER_SCHEMA()
    STATISTICS VARIANT, -- Row count, column stats, distributions
    PII_DETECTED ARRAY, -- List of columns with detected PII
    PHI_DETECTED ARRAY,
    DATA_QUALITY_ISSUES ARRAY,
    SYNONYM_SUGGESTIONS VARIANT,
    PROFILING_SUMMARY STRING, -- AI-generated summary
    CREATED_AT TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP(),
    METADATA VARIANT
);

-- Data Dictionary Agent History
CREATE TABLE IF NOT EXISTS AGENT_DICTIONARY_HISTORY (
    DICTIONARY_ID STRING DEFAULT UUID_STRING() PRIMARY KEY,
    WORKFLOW_ID STRING NOT NULL,
    EXECUTION_ID STRING NOT NULL,
    PROFILE_ID STRING NOT NULL, -- FK to profiling results
    PROPOSAL_ID STRING, -- FK to DDL_PROPOSALS
    SOURCE_SYSTEM STRING,
    TABLE_COUNT NUMBER(5,0),
    COLUMN_COUNT NUMBER(10,0),
    DDL_GENERATED BOOLEAN DEFAULT FALSE,
    DICTIONARY_ENRICHED BOOLEAN DEFAULT FALSE,
    EXTERNAL_API_CALLED BOOLEAN DEFAULT FALSE,
    CREATED_AT TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP(),
    METADATA VARIANT
);

-- Data Mapping Agent History
CREATE TABLE IF NOT EXISTS AGENT_MAPPING_HISTORY (
    MAPPING_ID STRING DEFAULT UUID_STRING() PRIMARY KEY,
    WORKFLOW_ID STRING NOT NULL,
    EXECUTION_ID STRING NOT NULL,
    DICTIONARY_ID STRING NOT NULL,
    SOURCE_SCHEMA STRING NOT NULL,
    TARGET_SCHEMA STRING NOT NULL,
    FIELD_MAPPINGS VARIANT, -- Source to target field mappings
    TRANSFORMATION_COUNT NUMBER(10,0),
    DBT_MODELS_GENERATED NUMBER(5,0),
    DBT_PROJECT_PATH STRING,
    MAPPING_CONFIDENCE_SCORE FLOAT,
    CREATED_AT TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP(),
    METADATA VARIANT
);

-- Field-level mapping details
CREATE TABLE IF NOT EXISTS FIELD_MAPPINGS (
    MAPPING_DETAIL_ID STRING DEFAULT UUID_STRING() PRIMARY KEY,
    MAPPING_ID STRING NOT NULL, -- FK to AGENT_MAPPING_HISTORY
    SOURCE_COLUMN STRING NOT NULL,
    TARGET_COLUMN STRING NOT NULL,
    SOURCE_DATA_TYPE STRING NOT NULL,
    TARGET_DATA_TYPE STRING NOT NULL,
    TRANSFORMATION_LOGIC STRING, -- SQL transformation code
    TRANSFORMATION_TYPE STRING, -- DIRECT, TYPE_CAST, CALCULATED, LOOKUP
    BUSINESS_RULE STRING,
    AI_GENERATED BOOLEAN DEFAULT TRUE,
    CONFIDENCE_SCORE FLOAT,
    VALIDATED BOOLEAN DEFAULT FALSE,
    VALIDATED_BY STRING,
    CREATED_AT TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP()
);

-- ============================================================================
-- MONITORING SCHEMA TABLES
-- ============================================================================

USE SCHEMA MONITORING;

-- Agent Performance Metrics
CREATE TABLE IF NOT EXISTS AGENT_METRICS (
    METRIC_ID STRING DEFAULT UUID_STRING() PRIMARY KEY,
    METRIC_TIMESTAMP TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP(),
    AGENT_NAME STRING NOT NULL,
    EXECUTION_ID STRING,
    METRIC_TYPE STRING NOT NULL, -- EXECUTION_TIME, TOKEN_USAGE, CREDIT_USAGE, SUCCESS_RATE
    METRIC_VALUE NUMBER(18,4),
    METRIC_UNIT STRING, -- SECONDS, TOKENS, CREDITS, PERCENTAGE
    AGGREGATION_PERIOD STRING, -- EXECUTION, HOURLY, DAILY
    METADATA VARIANT
);

-- Profiling Results (for UI display and analysis)
CREATE TABLE IF NOT EXISTS PROFILING_RESULTS (
    RESULT_ID STRING DEFAULT UUID_STRING() PRIMARY KEY,
    PROFILE_ID STRING NOT NULL,
    WORKFLOW_ID STRING NOT NULL,
    SOURCE_FILE_NAME STRING,
    FILE_SIZE_BYTES NUMBER(18,0),
    FILE_FORMAT STRING,
    ROW_COUNT NUMBER(18,0),
    COLUMN_COUNT NUMBER(10,0),
    SCHEMA_PROPOSAL VARIANT,
    COLUMN_STATISTICS VARIANT, -- Per-column stats
    DATA_QUALITY_SCORE NUMBER(5,2), -- 0-100 score
    PII_RISK_LEVEL STRING, -- NONE, LOW, MEDIUM, HIGH
    RECOMMENDATIONS ARRAY,
    CREATED_AT TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP()
);

-- ============================================================================
-- Create indexes for query performance
-- ============================================================================

-- Workflow tracking indexes
USE SCHEMA WORKFLOWS;
CREATE INDEX IF NOT EXISTS idx_workflow_status ON WORKFLOW_EXECUTIONS(STATUS);
CREATE INDEX IF NOT EXISTS idx_workflow_time ON WORKFLOW_EXECUTIONS(START_TIME);

-- Agent execution indexes
CREATE INDEX IF NOT EXISTS idx_agent_workflow ON AGENT_EXECUTION_LOG(WORKFLOW_ID);
CREATE INDEX IF NOT EXISTS idx_agent_name ON AGENT_EXECUTION_LOG(AGENT_NAME);

-- Metadata indexes
USE SCHEMA METADATA;
CREATE INDEX IF NOT EXISTS idx_dict_table ON ENTERPRISE_DATA_DICTIONARY(TABLE_NAME);
CREATE INDEX IF NOT EXISTS idx_dict_pii ON ENTERPRISE_DATA_DICTIONARY(IS_PII);

-- Success message
SELECT 'Foundational tables created successfully!' AS STATUS;

